
# Metodos de cada tipo de dato
# - Se llama con el operador "$"
# - Todos los metodos devuelven un tipo de dato
# - Los metodos que naturalemente no deberian devolver ningun valor devuelven el mismo objeto que los llamó

- num (Numero)
	- num() (copiar numero)
	- bol() (pasar a booleano)
	- tex() (pasar a texto)
	- fil() (pasar a file con nombre y extención vacia)
	- gro() (añadir a un nuevo grupo)
	- lis() (añadir a una nueva lista)
	- cop() (copiar)
	- len() (longitud)
- bol (Booleano)
	- num() (pasar a numero)
	- bol() (copiar booleano)
	- tex() (pasar a texto)
	- fil() (pasar a file con nombre y extención vacia)
	- gro() (añadir a un nuevo grupo)
	- lis() (añadir a una nueva lista)
	- cop() (copiar)
	- len() (longitud)
- tex (Texto)
	- num() (pasar a numero)
	- bol() (pasar a booleano)
	- tex() (copiar texto)
	- fil() (pasar a file con nombre y extención vacia)
	- gro() (añadir a un nuevo grupo)
	- lis() (añadir a una nueva lista)
	- cop() (copiar)
	- len() (longitud)
	- sub(inicial,final) (subcadena)
	- sub(exp,exp) (subcadena)
	- char(pos) (caracter)
	- sep(exp) (separar segun cada coincidencia de una expresión regular)
	- sep(exp, n) (separar segun la n-esima coincidencia de una expresión regular)
	- sep(exp, n, m) (separar entre la n-esima y la m-esima coincidencia de una expresión regular)
	- sep(exp, group num) (separar segun las n-esimas coincidencias de una expresión regular)
	- sep(n) (separar en n partes)
	- sep(group num) (separar segun las posiciones especificadas)
	- sep(group tex) (separar segun las expresiones especificadas)
	- rem(exp) (remover cada coincidencia de una expresión regular)
	- rem(exp, n) (remover n-esima coincidencia de una expresión regular)
	- rem(exp, n, m) (remover entre la n-esima y la m-esima coincidencia de una expresión regular)
	- rem(exp, group num) (remover las n-esimas coincidencias de una expresión regular)
	- rem(pos) (remover caracter en la posición especificada)
	- rem(inicial,final) (remover desde la posición inicial hasta la posición final)
	- rem(group num) (remover caracteres en las posiciones especificadas)
	- rem(group text) (remover expresiones regulares especificadas)
	- rep(exp, exp) (remplazar cada coincidencia de una expresión regular por otra)
	- rep(exp, n, exp) (remplazar n-esima coincidencia de una expresión regular por otra)
	- rep(exp, n, m, exp) (remplazar de la n-esima a la m-esima coincidencia de una expresión regular por otra)
	- rep(exp, group num, exp) (remplazar las n-esimas coincidencias de una expresión regular por otra)
	- rep(pos, exp) (remplazar caracter en la posición especificada por una expresion)
	- rep(group exp, group exp) (remplazar expresiones especificadas por otras expresiones)
	- con(num) (concatenar la misma cadena un numero especificado de veces)
	- con(exp) (concatenar una expresion)
	- con(exp, exp) (concatenar cada coincidencia de una expresión regular con otra)
	- con(exp, n, exp) (concatenar la n-esima coincidencia de una expresión regular con otra)
	- con(exp, n, m, exp) (concatenar de la n-esima a la m-esima coincidencia de una expresión regular con otra)
	- con(exp, group num, exp) (concatenar las n-esimas coincidencias de una expresión regular con otra)
	- con(pos, exp) (concatenar caracter en la posición especificada con una expresion)
	- con(group num, group exp) (concatenar caracteres en las posiciones especificadas con expresiones)
	- con(group exp, group exp) (concatenar expresiones especificadas con otras expresiones)
	- get(exp) (Obtener las expresiones encontradas)
	- get(exp, n) (Obtener la n-esima coincidencia de una expresión regular)
	- get(exp, n, m) (Obtener de la n-esima a la m-esima coincidencia de una expresión regular)
	- get(exp, group num) (Obtener las n-esimas coincidencias de una expresión regular)
	- get(pos) (Obtener caracter en la posición especificada)
	- get(group num) (Obtener caracteres en las posiciones especificadas)
	- get(group exp) (Obtener las expresiones especificadas)
	- ver(exp) (Verificar si existe la expresión)
	- ver(exp, n) (Verificar si existe la n-esima expresión)
	- ver(exp, n, m) (Verificar si existe entre la n-esima y la m-esima expresión)
	- ver(exp, group num) (Verificar si existen las n-esimas coincidencias de una expresión regular)
	- ver(pos) (Verificar si existe un caracter en la posición especificada)
	- ver(group num) (Verificar si existen caracteres en las posiciones especificadas)
	- ver(group exp) (Verificar si existen las expresiones especificadas)
	- pos(exp) (indices inicial y final de cada coincidencia de una expresión regular)
	- pos(exp, n) (indices inicial y final de la n-esima coincidencia de una expresión regular)
	- pos(exp, n, m) (indices inicial y final de la n-esima a la m-esima coincidencia de una expresión regular)
	- pos(exp, group num) (Indices iniciales y finales de las n-esimas coincidencias de una expresión regular)
	- pos(group exp) (Indices iniciales y finales de las expresiones regulares especificadas)
- fil (Archivo)
	- num() (pasar a numero el contenido)
	- bol() (pasar a booleano el contenido)
	- tex() (pasar a texto el contenido)
	- fil() (copiar file)
	- gro() (añadir a un nuevo grupo)
	- lis() (añadir a una nueva lista)
	- cop() (copiar)
	- len() (longitud)
	- name() (obtener nombre)
	- ext() (obtener extención)
	- cont() (obtener contenido)
	- name(tex) (Asignar nombre)
	- ext(tex) (Asignar extención)
	- cont(tex) (Asignar contenido)
	- set(File) (Asignar elementos de otro file)
	- Funciones del texto ligadas al File
- dir (Directorio)
	- num() (obtener el numero de archivos y directorios)
	- numf() (obtener el numero de archivos)
	- numd() (obtener el numero de directorios)
	- tex() (pasar a texto todo el arbol)
	- fil() (pasar a file con el texto del arbol de contenido y nombre y extención vacia)
	- gro() (añadir a un nuevo grupo)
	- lis() (añadir a una nueva lista)
	- cop() (copiar)
	- len() (longitud)
	- tre() (copiar arbol)
	- name() (Obtener nombre de la raiz)
	- name(tex) (Asignar nombre a la raiz)
	- last() (obtener padre)
	- root() (obtener padre mas lejano)
	- files() (obtener todos los archivos contenidos)
	- ins(file) (Insertar archivo al final)
	- ins(i, file) (Insertar archivo en la posición especificada)
	- ins(gorup file) (Insertar archivos al final)
	- ins(group num, gorup file) (Insertar archivos en las posiciones especificadas)
	- ins(tree) (Insertar directorio al final)
	- ins(i, tree) (Insertar directorio en la posición especificada)
	- ins(gorup tree) (Insertar directorios al final)
	- ins(group num, gorup tree) (Insertar directorios en las posiciones especificadas)
	- getf(i) (obtener archivo en la posición especificada)
	- getf(exp, exp) (obtener archivos que coincidan con el nombre y extensión especificado)
	- getf(init, end) (obtener archivos entre las posiciones especificadas)
	- getf(group num) (obtener archivos en las posiciones especificadas)
	- getf (obtener todos los archivos)
	- getd(i) (obtener directorio en la posición especificada)
	- getd(exp) (obtener directorio que coincida con el nombre especificado)
	- getd(init, end) (obtener directorio entre las posiciones especificadas)
	- getd(group num) (obtener directorios en las posiciones especificadas)
	- getd (obtener todos los directorios)
	- delf(i) (Borrar archivo en la posición especificada)
	- delf(exp, exp) (Borrar archivos que coincidan con el nombre y extensión especificado)
	- delf(init, end) (Borrar archivos entre las posiciones especificadas)
	- delf(group num) (Borrar archivos en las posiciones especificadas)
	- delf (Borrar todos los archivos)
	- deld(i) (Borrar directorio en la posición especificada)
	- deld(exp) (Borrar directorio que coincida con el nombre especificado)
	- deld(init, end) (Borrar directorio entre las posiciones especificadas)
	- deld(group num) (Borrar directorios en las posiciones especificadas)
	- deld (Borrar todos los directorios)
	- del (Borrar todos los archivos y directorios)
	- enumf(num, separator) (Enumerar archivos segun una enumeración y separación)
	- enumf(tex, separator) (Enumerar archivos segun una cadena de enumeración y separación)
	- denumf(separator) (Borrar enumeración de archivos segun una separación)
	- renumf(num, separator) (Reenumerar archivos segun una enumeración y separación)
	- renumf(tex, separator) (Reenumerar archivos segun una cadena de enumeración y separación)
	- enumd(num, separator) (Enumerar directorios segun una enumeración y separación)
	- enumd(tex, separator) (Enumerar directorios segun una cadena de enumeración y separación)
	- denumd(separator) (Borrar enumeración de directorios segun una separación)
	- renumd(num, separator) (Reenumerar directorios segun una enumeración y separación)
	- renumd(tex, separator) (Reenumerar directorios segun una cadena de enumeración y separación)
	- set(Tree) (Asignar elementos de otro file)
- gro (Grupo)
	- num() (obtener el numero de elementos)
	- tex() (pasar a texto)
	- lis() (convertir a lista)
	- gro() (crear una copia del grupo)
	- cop() (copiar)
	- len() (longitud)
	- join() (unir todos los elementos en uno solo)
	- join(boolean) (unir todos los elementos validos o no validos en uno solo)
	- get(boolean) (obtener elementos validos o no validos)
	- get(i) (obtener elemento en la posición especificada)
	- get(boolean, i) (obtener elemento valido o no valido en la posición especificada)
	- get(i,j) (obtener elementos entre las posiciones especificadas)
	- get(boolean, i, j) (obtener elementos validos o no validos entre las posiciones especificadas)
	- st(boolean) (Cambiar estado de todos los elementos a validos o no validos)
	- st(boolean, i) (Cambiar estado del elemento en la posición especificada a valido o no valido)
	- st(boolean, i, j) (Cambiar estado del elemento entre las posiciones especificadas a valido o no valido)
	- ins(element, boolean) (Insertar elemento al final)
	- ins(i, element, boolean) (Insertar elemento en la posición especificada)
	- ins(gorup element) (Insertar elementos al final)
	- ins(group num, gorup element) (Insertar elementos en las posiciones especificadas)
	- set(Group) (Asignar elementos de otro file)
	- Funciones de cada tipo de dato dependiendo del tipo
- lis (Lista)
	- num() (obtener el numero de elementos)
	- tex() (pasar a texto)
	- lis() (crear una copia de la lista)
	- gro() (convertir a grupo)
	- cop() (copiar)
	- len() (longitud)
	- get(i) (obtener elemento en la posición especificada)
	- get(i, j) (obtener elementos entre las posiciones especificadas)
	- ins(element) (Insertar elemento al final)
	- ins(i, element) (Insertar elemento en la posición especificada)
	- ins(list element) (Insertar elementos al final)
	- ins(group num, list element) (Insertar elementos en las posiciones especificadas)
	- set(List) (Asignar elementos de otro file)

